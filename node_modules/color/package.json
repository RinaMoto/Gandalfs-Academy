{
  "_args": [
    [
      {
        "raw": "color@^3.1.3",
        "scope": null,
        "escapedName": "color",
        "name": "color",
        "rawSpec": "^3.1.3",
        "spec": ">=3.1.3 <4.0.0",
        "type": "range"
      },
      "/nfs/stak/users/easterdr/public_html/Gandalfs-Academy/node_modules/colorspace"
    ]
  ],
  "_from": "color@>=3.1.3 <4.0.0",
  "_hasShrinkwrap": false,
  "_id": "color@3.2.1",
  "_inCache": true,
  "_location": "/color",
  "_nodeVersion": "16.0.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/color_3.2.1_1626601230048_0.2875286972511064"
  },
  "_npmUser": {
    "name": "qix",
    "email": "josh@junon.me"
  },
  "_npmVersion": "7.10.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "color@^3.1.3",
    "scope": null,
    "escapedName": "color",
    "name": "color",
    "rawSpec": "^3.1.3",
    "spec": ">=3.1.3 <4.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/colorspace"
  ],
  "_resolved": "https://registry.npmjs.org/color/-/color-3.2.1.tgz",
  "_shasum": "3544dc198caf4490c3ecc9a790b54fe9ff45e164",
  "_shrinkwrap": null,
  "_spec": "color@^3.1.3",
  "_where": "/nfs/stak/users/easterdr/public_html/Gandalfs-Academy/node_modules/colorspace",
  "authors": [
    "Josh Junon <i.am.qix@gmail.com>",
    "Heather Arthur <fayearthur@gmail.com>",
    "Maxime Thirouin"
  ],
  "bugs": {
    "url": "https://github.com/Qix-/color/issues"
  },
  "dependencies": {
    "color-convert": "^1.9.3",
    "color-string": "^1.6.0"
  },
  "description": "Color conversion and manipulation with CSS string support",
  "devDependencies": {
    "mocha": "9.0.2",
    "xo": "0.12.1"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-aBl7dZI9ENN6fUGC7mWpMTPNHmWUSNan9tuWN6ahh5ZLNk9baLJOnSMlrQkHcrfFgz2/RigjUVAjdx36VcemKA==",
    "shasum": "3544dc198caf4490c3ecc9a790b54fe9ff45e164",
    "tarball": "https://registry.npmjs.org/color/-/color-3.2.1.tgz",
    "fileCount": 4,
    "unpackedSize": 16581,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJg8/cOCRA9TVsSAnZWagAAbi0P/28LOL+b1/tdnDPgtNyO\nbCZbt/ykwOYZAZyqH+B3ucTqoRUVfgqU6gN3Pzdn3mZ5XPox1aLQXAo8ptfN\nMXZv76hu+anSuQ5xEbCq1QI40M6SirQilfqqr6uuzgjH2jbsE3cj0w6sK12l\nFuTvp9jHD/XDApV3kchqGXDYZkzBJvw+7B/wv8bNRTlxIqxkLvV6E4J9Yq4H\nheuZsmh9B+Dslq+v6mx8hwE5LtcgWsLeG/N+3+B1DBEArarCaj0byBFagOA/\nX2zePi9Il97oKAbvCsfRK9oejbistaryES6mqSqZZhEB8juaN0yLpSUuflib\nTkAyr3PwChvNhqSLPC2UyjV9BCNPLiv+pr+kAPvJyrVrsh4hYq7tJcmU1wl0\nLAbBOlUtHsEP3q0JjegHxiKr+RDY1Z4E0LQLpXT7wWhJtbHJM8ejuASpSDdf\nO47muWhIZEzkKL+7pyOy7VYyZ83vXW+yc+u9EqQEABv2XZALZ+yjwwXboGAX\nd2yjRvZDgWfJGrWacQZUGFXZwF+P9ICGSaHIIXSP3Cdjq1cMME0fYpcd2A3c\ncf3xgwVsw+FlsSQvrhFZrO5CYyCZHmGE+WRemA3vUT4igXg+vaJt+s/5Fs7l\nwVlGFo1aJvYqWZ1CwXtvj7zt1QGElY87JAT6+RirdfOzkk9R32VeQDAgoxil\nw0LA\r\n=XH+q\r\n-----END PGP SIGNATURE-----\r\n",
    "signatures": [
      {
        "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
        "sig": "MEUCIQDIiiUA/mDz+UpC4Nufa7FLaq0Q6WvEaW9WgkuCi/qeQwIgImJZh8VWxP70OelIdO/VJt+VmIEOUEaKeti8j9odpN4="
      }
    ]
  },
  "gitHead": "e752c390d4ab3f3659b22ef6cf91333c544cf7b8",
  "homepage": "https://github.com/Qix-/color#readme",
  "keywords": [
    "color",
    "colour",
    "css"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "qix",
      "email": "josh@junon.me"
    }
  ],
  "name": "color",
  "optionalDependencies": {},
  "readme": "# color [![Build Status](https://travis-ci.org/Qix-/color.svg?branch=master)](https://travis-ci.org/Qix-/color)\n\n> JavaScript library for immutable color conversion and manipulation with support for CSS color strings.\n\n```js\nvar color = Color('#7743CE').alpha(0.5).lighten(0.5);\nconsole.log(color.hsl().string());  // 'hsla(262, 59%, 81%, 0.5)'\n\nconsole.log(color.cmyk().round().array());  // [ 16, 25, 0, 8, 0.5 ]\n\nconsole.log(color.ansi256().object());  // { ansi256: 183, alpha: 0.5 }\n```\n\n## Install\n```console\n$ npm install color\n```\n\n## Usage\n```js\nvar Color = require('color');\n```\n\n### Constructors\n```js\nvar color = Color('rgb(255, 255, 255)')\nvar color = Color({r: 255, g: 255, b: 255})\nvar color = Color.rgb(255, 255, 255)\nvar color = Color.rgb([255, 255, 255])\n```\n\nSet the values for individual channels with `alpha`, `red`, `green`, `blue`, `hue`, `saturationl` (hsl), `saturationv` (hsv), `lightness`, `whiteness`, `blackness`, `cyan`, `magenta`, `yellow`, `black`\n\nString constructors are handled by [color-string](https://www.npmjs.com/package/color-string)\n\n### Getters\n```js\ncolor.hsl();\n```\nConvert a color to a different space (`hsl()`, `cmyk()`, etc.).\n\n```js\ncolor.object(); // {r: 255, g: 255, b: 255}\n```\nGet a hash of the color value. Reflects the color's current model (see above).\n\n```js\ncolor.rgb().array()  // [255, 255, 255]\n```\nGet an array of the values with `array()`. Reflects the color's current model (see above).\n\n```js\ncolor.rgbNumber() // 16777215 (0xffffff)\n```\nGet the rgb number value.\n\n```js\ncolor.hex() // #ffffff\n```\nGet the hex value.\n\n```js\ncolor.red()       // 255\n```\nGet the value for an individual channel.\n\n### CSS Strings\n```js\ncolor.hsl().string()  // 'hsl(320, 50%, 100%)'\n```\n\nCalling `.string()` with a number rounds the numbers to that decimal place. It defaults to 1.\n\n### Luminosity\n```js\ncolor.luminosity();  // 0.412\n```\nThe [WCAG luminosity](http://www.w3.org/TR/WCAG20/#relativeluminancedef) of the color. 0 is black, 1 is white.\n\n```js\ncolor.contrast(Color(\"blue\"))  // 12\n```\nThe [WCAG contrast ratio](http://www.w3.org/TR/WCAG20/#contrast-ratiodef) to another color, from 1 (same color) to 21 (contrast b/w white and black).\n\n```js\ncolor.isLight();  // true\ncolor.isDark();   // false\n```\nGet whether the color is \"light\" or \"dark\", useful for deciding text color.\n\n### Manipulation\n```js\ncolor.negate()         // rgb(0, 100, 255) -> rgb(255, 155, 0)\n\ncolor.lighten(0.5)     // hsl(100, 50%, 50%) -> hsl(100, 50%, 75%)\ncolor.lighten(0.5)     // hsl(100, 50%, 0)   -> hsl(100, 50%, 0)\ncolor.darken(0.5)      // hsl(100, 50%, 50%) -> hsl(100, 50%, 25%)\ncolor.darken(0.5)      // hsl(100, 50%, 0)   -> hsl(100, 50%, 0)\n\ncolor.lightness(50)    // hsl(100, 50%, 10%) -> hsl(100, 50%, 50%)\n\ncolor.saturate(0.5)    // hsl(100, 50%, 50%) -> hsl(100, 75%, 50%)\ncolor.desaturate(0.5)  // hsl(100, 50%, 50%) -> hsl(100, 25%, 50%)\ncolor.grayscale()      // #5CBF54 -> #969696\n\ncolor.whiten(0.5)      // hwb(100, 50%, 50%) -> hwb(100, 75%, 50%)\ncolor.blacken(0.5)     // hwb(100, 50%, 50%) -> hwb(100, 50%, 75%)\n\ncolor.fade(0.5)     // rgba(10, 10, 10, 0.8) -> rgba(10, 10, 10, 0.4)\ncolor.opaquer(0.5)     // rgba(10, 10, 10, 0.8) -> rgba(10, 10, 10, 1.0)\n\ncolor.rotate(180)      // hsl(60, 20%, 20%) -> hsl(240, 20%, 20%)\ncolor.rotate(-90)      // hsl(60, 20%, 20%) -> hsl(330, 20%, 20%)\n\ncolor.mix(Color(\"yellow\"))        // cyan -> rgb(128, 255, 128)\ncolor.mix(Color(\"yellow\"), 0.3)   // cyan -> rgb(77, 255, 179)\n\n// chaining\ncolor.green(100).grayscale().lighten(0.6)\n```\n\n## Propers\nThe API was inspired by [color-js](https://github.com/brehaut/color-js). Manipulation functions by CSS tools like Sass, LESS, and Stylus.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/Qix-/color.git"
  },
  "scripts": {
    "pretest": "xo",
    "test": "mocha"
  },
  "version": "3.2.1",
  "xo": {
    "rules": {
      "no-cond-assign": 0,
      "new-cap": 0
    }
  }
}
